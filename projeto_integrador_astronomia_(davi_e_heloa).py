# -*- coding: utf-8 -*-
"""Projeto Integrador - Astronomia (Davi e Heloa).ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Ok89UNztb-GGzGO0FvWIJKmSQi12Ioo8

## **Projeto Integrador I**
###Davi Pereira de Oliveira e Heloa Silva de Araujo Calegari
---

Estre projeto foi realizado com o tema Astronomia.
Nele foram utilizados bases encontradas no Kaggle e Github.
As bases são:
* Global_Space_Exploration_Dataset.csv: Traz dados de missões espaciais de 2000 a 2025
* neo.csv(near_earth_objects): Traz dados de objetos proximos a terra como asteroides
* Stars.csv: Traz dados de estrelas do universo
* PSCompPars_2023.09.17_08.49.34.csv: Traz dados de Exoplanetas (Planetas fora do sistema solar)
* planets.csv: Traz dados dos planetas do sistema solar

> As bases estão importadas e demonstradas abaixo

*Em alguns gráficos foi necessário filtrar colunas especificas*
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np

#Importando Databases e criando Dataframes

dfexped = pd.read_csv('Global_Space_Exploration_Dataset.csv')
display(dfexped)
dfexped.dtypes

dfobjetos = pd.read_csv('neo.csv')
dfobj = dfobjetos.dropna()
display(dfobj)
dfobj.dtypes

star = pd.read_csv ('https://github.com/YBIFoundation/Dataset/raw/main/Stars.csv')
dfstar = star.dropna()
display(dfstar)
dfstar.dtypes

exoplanetas = pd.read_csv ('PSCompPars_2023.09.17_08.49.34.csv')
dfexo = exoplanetas.dropna()
display(dfexo)
dfexo.dtypes

dfplanetas = pd.read_csv('planets.csv')
display(dfplanetas)
dfplanetas.dtypes

"""
Gráficos 
"""

#Gráfico de Linha: Evolução do orçamento anual para exploração espacial (Missões Tripulada e não tripuladas)

plt.figure(figsize=(15, 6))
sns.lineplot(x='Year', y='Budget (in Billion $)', hue="Mission Type", palette="Set2", dashes=True, data=dfexped)

plt.xlabel("Ano")
plt.ylabel("Orçamento (em Bilhões $)")
plt.title("Orçamento anual para exploração espacial")
plt.grid(True)

plt.show()

#Gráfico de barras: Media de Orçamento por Páis para Exploração espacial

plt.xlabel("País")
plt.ylabel("Orçamento em Bi $")
plt.title("Media de Orçamento por País")
plt.xticks(rotation=45)

sns.barplot(x='Country', y='Budget (in Billion $)', errorbar=None,  data=dfexped, color = 'green')
plt.show()

#Gráfico Histograma: Frequencia de teconoliga usada para missões de exploração

sns.histplot(x="Technology Used", data=dfexped, bins=5, color="pink")
plt.xlabel("Orçamento (em Bilhões $)")
plt.xticks(rotation=45)
plt.ylabel("Frequência")
plt.title("Distribuição do Orçamento por Tecnologia")
plt.show()

#Gráfico Histograma com KDE: Distribuição de frequencia da temperatura de estrelas
plt.figure(figsize=(10, 6))
sns.histplot(x="Temperature (K)", data=dfstar, kde=True, color="yellow")

plt.xlabel("Temperature (K)")
plt.ylabel("Frequência")
plt.title("Distribuição da Temperature (K) de estrelas")
plt.show()

"""> **Obs**: A magnitude absoluta de uma estrela é uma medida de sua luminosidade intrínseca, ou seja, o quão brilhante ela realmente é, 
              independentemente de sua distância da Terra*(Números <0 representam as estrelas mais brilhantes*). É como padronizar a distância 
              para comparar o brilho real das estrelas. Diferente da Luminosidade, que mede quanta luz chega até a terra.
"""

#Gráfico BoxPlot: Magnitude absoluta de estrelas por categoria

plt.figure(figsize=(10, 6))
sns.boxplot(x="Star category", y="Absolute magnitude (Mv)",   linewidth=1.5, fliersize=1, data=dfstar, color='Grey')
plt.xlabel("Categoria de Estrela")
plt.ylabel("Magnitude Absoluta")
plt.title("Total Magnitude Absoluta por Categoria de Estrela")
plt.show()

#Gráfico de Densidade: Miss distance (Distancia que passou longe da terra) por se é perigoso ou não

plt.figure(figsize=(10, 6))
sns.kdeplot(data=dfobj, x="miss_distance", hue="hazardous", fill=True,  alpha=0.2, linewidth=1.5, palette='husl')

plt.title("Densidade da Distância Errada por Ojetos Perigosos ou não")
plt.xlabel("Distancia Errada")
plt.ylabel("Densidade")
plt.show()

# Mapa de calor com anotações: Distribuição do numero de explorações espaciais por país a cada 2 anos


dfexped['Year_Group'] = (dfexped['Year'] // 2) * 2
dfexplora = dfexped.groupby('Country')['Year_Group'].value_counts().unstack(fill_value=0)

plt.figure(figsize=(10, 6))
sns.heatmap(dfexplora, annot=True, cmap='Blues', fmt='d', linewidths=0.5)
plt.title("Quantidade de explorações por País a cada 2 Anos")
plt.xlabel("Ano")
plt.ylabel("País")

plt.show()

#Grafico de dispersão: Massa x Diametro dos planetas do sistema solar

df1 = dfplanetas.dropna(subset=['Mass (10^24kg)', 'Diameter (km)'])
plt.figure(figsize=(12, 6))
sns.scatterplot(x='Mass (10^24kg)', y='Diameter (km)', hue='Planet', size='Diameter (km)', data=df1)
plt.xlabel("Massa (Júpiter)")
plt.ylabel("Diâmetro (km)")
plt.title("Dispersão: Massa vs Diâmetro")
plt.legend(title="Planeta", bbox_to_anchor=(1.05, 1), loc='upper left')
plt.grid(True)
plt.tight_layout()
plt.show()

display(dfobj)

#Grafico de Regressao linear: Temperatura x Mag. Absoluta de estrelas
df2 = dfstar.dropna(subset=['Absolute magnitude (Mv)', 'Temperature (K)'])
plt.figure(figsize=(12, 6))
sns.regplot(x='Temperature (K)', y='Absolute magnitude (Mv)', data=df2, scatter_kws={'s': 10}, line_kws={'color': 'red'})
plt.xlabel("Temperature (K)")
plt.ylabel("Absolute magnitude (Mv)")
plt.title("Regressão Linear: Temperatura vs Magnitude Absoluta de estrelas")
plt.grid(True)
plt.show()

#Grafico de violino: Massa de Exoplanetas por intalação de descoberta (Top 3 com mais descobertas)

df3 = dfexo.dropna(subset=['disc_facility', 'pl_bmassj'])
top_facilities = df3['disc_facility'].value_counts().nlargest(3).index
df3 = df3[df3['disc_facility'].isin(top_facilities)]
plt.figure(figsize=(12, 6))
sns.violinplot(data=df3, x='disc_facility', y='pl_bmassj', color='skyblue')
plt.xlabel("Instalação de Descoberta")
plt.ylabel("Massa (Júpiter)")
plt.title("Violino: Massa de Exoplanetas por Instalação de Descoberta")
plt.xticks(rotation=45)
plt.grid(True)
plt.show()

#Gráfico de Pares - Exoplanetas: Massa, Raio, Temperatura, Insolação | Por numero de estrela no sistema planetário

df4 = dfexo[['pl_bmassj', 'pl_radj', 'pl_eqt', 'pl_insol', 'sy_snum']].dropna()
sns.pairplot(df4, diag_kind='kde',hue='sy_snum' ,palette='husl')
plt.suptitle("Gráfico de Pares - Exoplanetas: Massa, Raio, Temperatura, Insolação | Por numero de estrela no sistema planetário", y=1.02)
plt.show()

#Parcelas Conjuntas: Ano vs Orçamento em Missões Espaciais

df5 = dfexped.copy()
df5['Budget (in Billion $)'] = pd.to_numeric(df5['Budget (in Billion $)'], errors='coerce')
df5 = df5.dropna(subset=['Year', 'Budget (in Billion $)'])
sns.jointplot(data=df5, x='Year', y='Budget (in Billion $)', kind='hex', color='purple')
plt.suptitle("Parcelas Conjuntas: Ano vs Orçamento em Missões Espaciais", y=1.02)
plt.tight_layout()
plt.show()